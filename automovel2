package exercicios;

import java.io.*;
import java.util.*;

public class AutomovelManager {
    private List<Automovel> lista = new ArrayList<>();
    private final String arquivo = "automoveis.txt";

    public AutomovelManager() {
        carregarDados();
    }

    public void inserirAutomovel(Automovel auto) {
        if (buscarPorPlaca(auto.getPlaca()) == null) {
            lista.add(auto);
            System.out.println("Automóvel inserido com sucesso.");
        } else {
            System.out.println("Erro: Placa já cadastrada.");
        }
    }

    public void removerAutomovel(String placa) {
        Automovel auto = buscarPorPlaca(placa);
        if (auto != null) {
            lista.remove(auto);
            System.out.println("Automóvel removido.");
        } else {
            System.out.println("Automóvel não encontrado.");
        }
    }

    public void alterarAutomovel(String placa, String modelo, String marca, int ano, double valor) {
        Automovel auto = buscarPorPlaca(placa);
        if (auto != null) {
            auto.setModelo(modelo);
            auto.setMarca(marca);
            auto.setAno(ano);
            auto.setValor(valor);
            System.out.println("Dados alterados com sucesso.");
        } else {
            System.out.println("Automóvel não encontrado.");
        }
    }

    public void consultarAutomovel(String placa) {
        Automovel auto = buscarPorPlaca(placa);
        if (auto != null) {
            System.out.println(auto.exibir());
        } else {
            System.out.println("Automóvel não encontrado.");
        }
    }

    public void listarAutomoveis(String criterio) {
        Comparator<Automovel> comparator;
        switch (criterio.toLowerCase()) {
            case "placa":
                comparator = Comparator.comparing(Automovel::getPlaca);
                break;
            case "modelo":
                comparator = Comparator.comparing(Automovel::getModelo);
                break;
            case "marca":
                comparator = Comparator.comparing(Automovel::getMarca);
                break;
            default:
                System.out.println("Critério inválido.");
                return;
        }
        lista.stream()
             .sorted(comparator)
             .forEach(auto -> System.out.println(auto.exibir()));
    }

    public void salvarDados() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(arquivo))) {
            for (Automovel auto : lista) {
                writer.write(auto.toString());
                writer.newLine();
            }
            System.out.println("Dados salvos com sucesso.");
        } catch (IOException e) {
            System.out.println("Erro ao salvar dados: " + e.getMessage());
        }
    }

    private void carregarDados() {
        try (BufferedReader reader = new BufferedReader(new FileReader(arquivo))) {
            String linha;
            while ((linha = reader.readLine()) != null) {
                String[] partes = linha.split(",");
                if (partes.length == 5) {
                    Automovel auto = new Automovel(
                        partes[0], partes[1], partes[2],
                        Integer.parseInt(partes[3]), Double.parseDouble(partes[4]));
                    lista.add(auto);
                }
            }
        } catch (FileNotFoundException e) {
            
        } catch (IOException e) {
            System.out.println("Erro ao carregar dados: " + e.getMessage());
        }
    }

    private Automovel buscarPorPlaca(String placa) {
        for (Automovel auto : lista) {
            if (auto.getPlaca().equalsIgnoreCase(placa)) {
                return auto;
            }
        }
        return null;
    }
}
